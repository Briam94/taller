{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routes.ts","webpack:///./src/app/components/dashboard/dashboard.component.css","webpack:///./src/app/components/dashboard/dashboard.component.html","webpack:///./src/app/components/dashboard/dashboard.component.ts","webpack:///./src/app/components/login/login.component.css","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/components/navbar/navbar.component.css","webpack:///./src/app/components/navbar/navbar.component.html","webpack:///./src/app/components/navbar/navbar.component.ts","webpack:///./src/app/modules/proyectos/services/proyecto.service.ts","webpack:///./src/app/modules/tareas/services/tarea.service.ts","webpack:///./src/app/modules/usuarios/services/usuario.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["var map = {\n\t\"./modules/proyectos/proyecto/proyecto.module\": [\n\t\t\"./src/app/modules/proyectos/proyecto/proyecto.module.ts\",\n\t\t\"modules-proyectos-proyecto-proyecto-module\"\n\t],\n\t\"./modules/tareas/tarea/tarea.module\": [\n\t\t\"./src/app/modules/tareas/tarea/tarea.module.ts\",\n\t\t\"modules-tareas-tarea-tarea-module\"\n\t],\n\t\"./modules/usuarios/usuario/usuario.module\": [\n\t\t\"./src/app/modules/usuarios/usuario/usuario.module.ts\",\n\t\t\"modules-usuarios-usuario-usuario-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\tvar id = ids[0];\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","module.exports = \"\"","module.exports = \"\\n  <app-navbar></app-navbar>\\n  <div class=\\\"p-3 mb-2 bg-light text-dark\\\">\\n  <router-outlet></router-outlet>  \\n</div>\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'tallerFronted';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\n\nimport { environment } from '../environments/environment';\nimport { AngularFirestoreModule } from 'angularfire2/firestore';\nimport { AngularFireModule } from 'angularfire2';\nimport { ProyectoService } from './modules/proyectos/services/proyecto.service';\n\nimport { FormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app.routes';\nimport { LoginComponent } from './components/login/login.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    DashboardComponent,\n    LoginComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    AngularFireModule.initializeApp(environment.firebaseConfig, 'tellerfrontend'),\n    AngularFirestoreModule,\n    FormsModule\n  ],\n  providers: [ProyectoService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Routes, RouterModule } from '@angular/router';\r\nimport { NgModule, ModuleWithProviders } from '@angular/core';\r\n\r\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\n\r\nconst APP_ROUTES: Routes = [\r\n\t{ path: '', redirectTo: 'login', pathMatch: 'full' },\r\n\t{ path: 'login', component: LoginComponent },\r\n\t{ path: 'inicio', component: DashboardComponent },\r\n\t{\r\n\t\tpath: 'proyecto',\r\n\t\tloadChildren: './modules/proyectos/proyecto/proyecto.module#ProyectoModule'\r\n\t},\r\n\t{\r\n\t\tpath: 'tarea',\r\n\t\tloadChildren: './modules/tareas/tarea/tarea.module#TareaModule'\r\n\t},\r\n\t{\r\n\t\tpath: 'usuario',\r\n\t\tloadChildren: './modules/usuarios/usuario/usuario.module#UsuarioModule'\r\n\t}\r\n];\r\n\r\n@NgModule({\r\n\timports: [RouterModule.forRoot(APP_ROUTES)],\r\n\texports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }","module.exports = \"\"","module.exports = \"<div  class=\\\"container\\\">\\n\\t<br>\\n\\n\\n<!-- BUSQUEDA POR NOMBRE -->\\n  <div class=\\\"input-group mb-3\\\">\\n    <input [(ngModel)]=\\\"valueInput\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Buscar proyecto por nombre\\\" aria-label=\\\"Recipient's username\\\" aria-describedby=\\\"button-addon2\\\">\\n    <br>\\n    <div class=\\\"input-group-append\\\">\\n      <div  *ngFor=\\\"let proyecto of proyectos\\\">\\n        <div *ngIf=\\\"valueInput == proyecto.nombre\\\">\\n          <div class=\\\"table-responsive\\\">\\n            <br>\\n          <table class=\\\"table table-responsive table-striped table-bordered\\\">\\n            <thead>\\n              <tr>\\n                <th scope=\\\"col\\\">NOMBRE</th>\\n                <th scope=\\\"col\\\">RESPONSABLE</th>\\n                <th scope=\\\"col\\\">FECHA INICIO</th>\\n                <th scope=\\\"col\\\">FECHA ENTREGA</th>\\n                <th scope=\\\"col\\\">ESTADO</th>\\n                <th scope=\\\"col\\\">DESCRIPCION</th>\\n                <th scope=\\\"col\\\">TAREAS</th>\\n              </tr>\\n            </thead>\\n            <tbody>\\n              <tr>\\n                <td>{{proyecto.nombre}}</td>\\n                <td>{{proyecto.responsable}}</td>\\n                <td>{{proyecto.fecha_inicio | date: 'dd/MM/yyyy'}}</td>\\n                <td>{{proyecto.fecha_entrega | date: 'dd/MM/yyyy'}}</td>\\n                <td>{{proyecto.estado}}</td>\\n                <td>{{proyecto.descripcion}}</td>\\n                <td >\\n                  <div *ngFor=\\\"let tarea of tareas\\\">\\n                    <div  *ngIf=\\\"proyecto.nombre == tarea.proyecto\\\">\\n                      {{tarea.nombre}}\\n                    </div>\\n                  </div>\\n                </td>\\n              </tr>\\n            </tbody>\\n          </table>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n\\n<!-- TABLAS DE ESTADO -->\\n\\t<table class=\\\"table table-striped table-hover\\\">\\n  <thead class=\\\"thead-dark\\\">\\n    <tr>\\n      <th scope=\\\"col\\\">NOMBRE PROYECTO</th>\\n      <th scope=\\\"col\\\">FECHA INICIO</th>\\n      <th scope=\\\"col\\\">FECHA ENTREGA</th>\\n      <th scope=\\\"col\\\">ESTADO</th>\\n      <th scope=\\\"col\\\">ACCIONES</th>\\n    </tr>\\n  </thead>\\n  <tbody *ngFor=\\\"let proyecto of proyectos\\\" >\\n    <tr *ngIf=\\\" proyecto.estado == 'En progreso'\\\">\\n      <td>{{proyecto.nombre}}</td>\\n      <td>{{proyecto.fecha_inicio  | date: 'dd/MM/yyyy'}}</td>\\n      <td>{{proyecto.fecha_entrega | date: 'dd/MM/yyyy'}}</td>\\n      <td>{{proyecto.estado}}</td>\\n      <td>\\n        <!-- BOTON VER -->\\n        <button *ngIf=\\\"editState == false\\\" (click)=\\\"editVista($event, proyecto)\\\" type=\\\"button\\\" class=\\\"btn btn-info\\\">VER</button>\\n        <!-- BOTON CERRAR -->\\n      <button *ngIf=\\\"editState && vistaToEdit.id == proyecto.id\\\" (click)=\\\"clearState()\\\" type=\\\"button\\\" class=\\\" ml-2 btn btn-dark\\\">\\n        <i class=\\\"fas fa-times-circle\\\"></i></button>\\n        </td>\\n    </tr>\\n      <div *ngIf=\\\"editState && vistaToEdit.id == proyecto.id\\\">        \\n          <form (ngSubmit)=\\\"onUpdateProyecto(proyecto)\\\" class=\\\"col s6\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col\\\">\\n                <label><span>NOMBRE DEL PROYECTO</span></label>\\n                <input [(ngModel)]=\\\"proyecto.nombre\\\" #nombre=\\\"ngModel\\\" name=\\\"nombre\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Nombre del proyecto\\\" disabled>\\n              </div>\\n              <div class=\\\"col\\\">\\n                <label><span>RESPONSABLE DEL PROYECTO</span></label>\\n                <input [(ngModel)]=\\\"proyecto.responsable\\\" #responsable=\\\"ngModel\\\"\\n                 name=\\\"responsable\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Nombre de persona a cargo\\\" disabled>\\n              </div>\\n            </div>\\n            <br>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col\\\">\\n                <label><span>FECHA DE INICIO</span></label>\\n                <input [(ngModel)]=\\\"proyecto.fecha_inicio\\\" #fecha_inicio=\\\"ngModel\\\"\\n                 name=\\\"fecha_inicio\\\" type=\\\"date\\\" class=\\\"form-control\\\" disabled>\\n              </div>\\n              <div class=\\\"col\\\">\\n                <label><span>FECHA DE ENTREGA</span></label>\\n                <input [(ngModel)]=\\\"proyecto.fecha_entrega\\\" #fecha_entrega=\\\"ngModel\\\"\\n                 name=\\\"fecha_entrega\\\" type=\\\"date\\\" class=\\\"form-control\\\"disabled>\\n              </div>\\n              <div class=\\\"col\\\">\\n                <label for=\\\"inputState\\\">ESTADO</label>\\n                <select [(ngModel)]=\\\"proyecto.estado\\\" #estado=\\\"ngModel\\\" name=\\\"estado\\\"\\n                 id=\\\"inputState\\\" class=\\\"form-control\\\" disabled>\\n                  <option selected>En progreso</option>\\n                  <option>Terminado</option>\\n                </select>\\n              </div>\\n            </div>\\n            <br>\\n              <div class=\\\"form-group text-center\\\">\\n                <label for=\\\"inputState\\\"><span>DESCRIPCION</span></label>\\n                <textarea [(ngModel)]=\\\"proyecto.descripcion\\\" #descripcion=\\\"ngModel\\\" rows=\\\"4\\\" cols=\\\"50\\\" type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"descripcion\\\" id=\\\"descripcion\\\"\\n                 disabled></textarea>\\n              </div>\\n              <div *ngFor=\\\"let tarea of tareas\\\">\\n                <div *ngIf=\\\"proyecto.nombre == tarea.proyecto\\\">\\n                <span>\\n                  <strong>Tareas: </strong>{{tarea.nombre}}\\n                </span>\\n              </div>\\n              </div>\\n            <br>\\n        </form>\\n      </div>\\n  </tbody>\\n</table>\\n<br><br>\\n\\n  <table class=\\\"table table-striped table-hover\\\">\\n  <thead class=\\\"thead-dark\\\">\\n    <tr>\\n      <th scope=\\\"col\\\">NOMBRE TAREA</th>\\n      <th scope=\\\"col\\\">PRIORIDAD</th>\\n      <th scope=\\\"col\\\">PROYECTO</th>\\n      <th scope=\\\"col\\\">DESCRIPCION</th>\\n      <th scope=\\\"col\\\">ACCIONES</th>\\n    </tr>\\n  </thead>\\n  <tbody *ngFor=\\\"let tarea of tareas\\\" >\\n    <tr>\\n      <td>{{tarea.nombre}}</td>\\n      <td>{{tarea.prioridad}}</td>\\n      <td>{{tarea.proyecto}}</td>\\n      <td>{{tarea.descripcion}}</td>\\n      <td><button type=\\\"button\\\" class=\\\"btn btn-info\\\">VER</button></td>\\n    </tr>\\n  </tbody>\\n</table>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n\nimport { ProyectosInterface } from '../../models/proyectosInterface';\nimport { ProyectoService } from '../../modules/proyectos/services/proyecto.service';\n\nimport { TareaInterface } from '../../models/tareasInterface';\nimport { TareaService } from '../../modules/tareas/services/tarea.service';\n\n\nimport { formatDate } from '@angular/common';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n\tvalueInput:string = '';\n\n\tproyectos: ProyectosInterface[];\n\n\ttareas: TareaInterface[];\n\n\testado1: string = \"Terminado\";\n\testado2: string = \"En progreso\";\n\tfechaC:Date;\n\n\tfecha = Date.now();\n\tfechaR:string = \"\";\n\n\teditState: boolean = false;\n\tvistaToEdit: ProyectosInterface;\n\n\tconstructor(private proyectoService: ProyectoService, \n\t\tprivate tareaService: TareaService) {\n\t\tthis.fechaR = formatDate(this.fecha, 'yyyyMMdd', 'en-US');\n\t\t}\n\n  ngOnInit() {\n\t  this.proyectoService.getProyectos().subscribe(proyectos => {\n\t\t  console.log(proyectos);\n\t\t  this.proyectos = proyectos;\n\t  })\n\n\t  this.tareaService.getTareas().subscribe(tareas => {\n\t\t  this.tareas = tareas;\n\t  });\n\t  console.log(this.fechaR);\n  }\n\n\teditVista(event, proyecto:ProyectosInterface){\n\t\tthis.editState = true;\n\t\tthis.vistaToEdit = proyecto;\n\t}\n\n\tclearState(){\n\t\tthis.editState = false;\n\t\tthis.vistaToEdit = null;\n\t\tconsole.log('clearState dashboard')\n\t}\n\n}\n","module.exports = \"\"","module.exports = \"<br>\\n<div class=\\\"container\\\">\\n\\t<div class=\\\"text-center\\\">\\n\\t\\t<h4>PARA INICIAR SESION PORFAVOR INGRESA USUARIO Y CONTRASEÑA</h4>\\n\\t\\t<form class=\\\"px-4 py-3\\\">\\n\\t    <div class=\\\"form-group\\\">\\n\\t      <label>NOMBRE DE USUARIO</label>\\n\\t      <input [(ngModel)]=\\\"nombres\\\" name=\\\"nombres\\\" type=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"Nombre usuario\\\">\\n\\t    </div>\\n\\t    <div class=\\\"form-group\\\">\\n\\t      <label>CONTRASEÑA</label>\\n\\t      <input [(ngModel)]=\\\"passwords\\\" name=\\\"passwords\\\" type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Contraseña\\\">\\n\\t    </div>\\n\\t    <div class=\\\"text-center\\\" *ngFor=\\\"let usuario of usuarios\\\">\\n\\t    \\t<div *ngIf=\\\"usuario.nombre == nombres && usuario.password == passwords\\\">\\n\\t    \\t\\t<button [routerLink]=\\\"['/inicio']\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\">INGRESAR</button>\\n\\t    \\t</div>\\n\\t    \\t\\n\\t\\t</div>\\n\\t  </form>\\n\\t</div>\\t  \\n</div>\"","import { Component, OnInit } from '@angular/core';\n\nimport { UsuarioInterface } from '../../models/usuarioInterface';\nimport { UsuarioService } from '../../modules/usuarios/services/usuario.service';\n\n\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n\tnombres: string = '';\n\tpasswords: string = '';\n\n\tusuarios: UsuarioInterface[];\n\n\tconstructor(private usuarioService: UsuarioService, private router: Router) { }\n\n  ngOnInit() {\n\t  this.usuarioService.getUsuarios().subscribe(usuarios => {\n\t\t  this.usuarios = usuarios;\n\t\t  console.log(usuarios);\n\t  })\n  }\n\n\tingresar(event, usuario: UsuarioInterface) {\n\t\tif (usuario.nombre == this.nombres && usuario.password == this.passwords) {\n\t\t\tthis.router.navigate(['/inicio']);\n\t\t}\n\t\telse {\n\t\t\talert('usuario o contraseña incorrecto');\n\t\t}\n\t}\n\n}\n","module.exports = \"\"","module.exports = \"\\n    <nav class=\\\"navbar navbar-expand-lg navbar-dark bg-primary\\\">\\n  <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/inicio']\\\"><h3><strong>PROYECTOS</strong></h3></a>\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\n          <li class=\\\"nav-item active\\\">\\n            <a class=\\\"nav-link\\\" [routerLink]=\\\"['/inicio']\\\"><strong>INICIO <i class=\\\"fas fa-home\\\"></i></strong></a>\\n          </li>\\n        <li class=\\\"nav-item \\\"><a [routerLink]=\\\"['/proyecto']\\\" class=\\\"nav-link mr-2\\\">Proyecto</a> </li>\\n        <li class=\\\"nav-item \\\"><a [routerLink]=\\\"['/tarea']\\\" class=\\\"nav-link mr-2\\\">Tarea</a> </li>\\n        <li class=\\\"nav-item \\\"><a [routerLink]=\\\"['/usuario']\\\" class=\\\"nav-link mr-2\\\">Usuario</a> </li>\\n      <li class=\\\"nav-item dropdown\\\">\\n      </li>\\n    </ul>\\n  </div>\\n</nav>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { AngularFirestore, AngularFirestoreCollection, AngularFirestoreDocument } from 'angularfire2/firestore';\nimport { ProyectosInterface } from '../../../models/proyectosInterface';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProyectoService {\n\n\tproyectosCollection: AngularFirestoreCollection<ProyectosInterface>;\n\tproyectos: Observable<ProyectosInterface[]>;\n\tproyectosDoc: AngularFirestoreDocument<ProyectosInterface>;\n\n  constructor(public afs: AngularFirestore) {\n\t  //this.proyectos = afs.collection('projects').valueChanges();\n\t  this.proyectosCollection = afs.collection<ProyectosInterface>('projects');\n\t  this.proyectos = this.proyectosCollection.snapshotChanges().pipe(\n\t\t  map(actions => actions.map(a => {\n\t\t\t  const data = a.payload.doc.data() as ProyectosInterface;\n\t\t\t  const id = a.payload.doc.id;\n\t\t\t  return { id, ...data };\n\t\t  }))\n\t  );\n  }\n\n  getProyectos(){\n\t  return this.proyectos;\n  }\n\n\taddProyecto(proyecto: ProyectosInterface) {\n\t\tconsole.log('nuevo proyecto');\n\t\tthis.proyectosCollection.add(proyecto);\n\t}\n\n\tdeleteProyecto(proyecto: ProyectosInterface) {\n\t\tconsole.log('borrar proyecto');\n\t\tthis.proyectosDoc = this.afs.doc(`projects/${proyecto.id}`);\n\t\tthis.proyectosDoc.delete();\n\t}\n\n\tupDateProyecto(proyecto: ProyectosInterface) {\n\t\tconsole.log('actualizar proyecto');\n\t\tthis.proyectosDoc = this.afs.doc(`projects/${proyecto.id}`);\n\t\tthis.proyectosDoc.update(proyecto);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { TareaInterface } from '../../../models/tareasInterface';\nimport { AngularFirestore, AngularFirestoreCollection, AngularFirestoreDocument } from 'angularfire2/firestore';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TareaService {\n\n\ttareasCollection: AngularFirestoreCollection<TareaInterface>;\n\ttareas: Observable<TareaInterface[]>;\n\ttareaDoc: AngularFirestoreDocument<TareaInterface>;\n\n  constructor(public afs: AngularFirestore) {\n\t  //this.tareas = afs.collection('tareas').valueChanges();\n\n\t  this.tareasCollection = afs.collection<TareaInterface>('tareas');\n\t  this.tareas = this.tareasCollection.snapshotChanges().pipe(\n\t\t  map(actions => actions.map(a => {\n\t\t\t  const data = a.payload.doc.data() as TareaInterface;\n\t\t\t  const id = a.payload.doc.id;\n\t\t\t  return { id, ...data };\n\t\t  }))\n\t  );\n\n  }\n\n  getTareas(){\n\t  return this.tareas;\n  }\n\n\taddTarea(tarea: TareaInterface){\n\t\tconsole.log('new tarea');\n\t\tthis.tareasCollection.add(tarea);\n\t\talert('Tarea agregada exitosamente')\n\t}\n\n\tdeleteTarea(tarea: TareaInterface) {\n\t\tthis.tareaDoc = this.afs.doc(`tareas/${tarea.id}`)\n\t\tthis.tareaDoc.delete();\n\t}\n\n\tupdateTarea(tarea: TareaInterface){\n\t\tthis.tareaDoc = this.afs.doc(`tareas/${tarea.id}`);\n\t\tthis.tareaDoc.update(tarea);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { AngularFirestore, AngularFirestoreCollection, AngularFirestoreDocument } from 'angularfire2/firestore';\nimport { UsuarioInterface } from '../../../models/usuarioInterface';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsuarioService {\n\n\n\tusuariosCollection: AngularFirestoreCollection<UsuarioInterface>;\n\tusuarios: Observable<UsuarioInterface[]>;\n\tusuariosDoc: AngularFirestoreDocument<UsuarioInterface>;\n\n\tconstructor(public afs: AngularFirestore) {\n\t\t//this.usuarios = afs.collection('usuarios').valueChanges();\n\t\tthis.usuariosCollection = afs.collection<UsuarioInterface>('usuarios');\n\t\tthis.usuarios = this.usuariosCollection.snapshotChanges().pipe(\n\t\t\tmap(actions => actions.map(a => {\n\t\t\t\tconst data = a.payload.doc.data() as UsuarioInterface;\n\t\t\t\tconst id = a.payload.doc.id;\n\t\t\t\treturn { id, ...data };\n\t\t\t}))\n\t\t);\n\t}\n\n\tgetUsuarios(){\n\t\treturn this.usuarios;\n\t}\n\n\taddUsuario(usuario: UsuarioInterface){\n\t\tconsole.log('nuevo usuario')\n\t\tthis.usuariosCollection.add(usuario);\n\t}\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n\tfirebaseConfig : {\n\t\tapiKey: \"AIzaSyBE7UB5HgmKLFUF5W6zhLoD8cArn0aQ9lU\",\n\t\tauthDomain: \"tellerfrontend.firebaseapp.com\",\n\t\tdatabaseURL: \"https://tellerfrontend.firebaseio.com\",\n\t\tprojectId: \"tellerfrontend\",\n\t\tstorageBucket: \"tellerfrontend.appspot.com\",\n\t\tmessagingSenderId: \"698019407056\"\n\t}\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n"],"sourceRoot":""}